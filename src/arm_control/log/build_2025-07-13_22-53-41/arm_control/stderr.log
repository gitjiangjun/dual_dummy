[01m[K/home/jj/dual_dummy/src/arm_control/src/motionlib.cpp:[m[K In function â€˜[01m[KEigen::MatrixXd numericalJacobian(const std::vector<ModifiedDHParameter>&, const VectorXd&, const int&, const std::vector<std::pair<double, double> >&, double)[m[Kâ€™:
[01m[K/home/jj/dual_dummy/src/arm_control/src/motionlib.cpp:81:23:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kconst size_t[m[Kâ€™ {aka â€˜[01m[Kconst long unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare-Wsign-compare]8;;[m[K]
   81 |     for (int i = 0; [01;35m[Ki < n[m[K; ++i) {
      |                     [01;35m[K~~^~~[m[K
[01m[K/home/jj/dual_dummy/src/arm_control/src/motionlib.cpp:73:51:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kjoint_limits[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
   73 |     [01;35m[Kconst std::vector<std::pair<double, double>>& joint_limits[m[K,
      |     [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~[m[K
[01m[K/home/jj/dual_dummy/src/arm_control/src/motionlib.cpp:[m[K In function â€˜[01m[KSolution inverseKinematics(const std::vector<ModifiedDHParameter>&, const VectorXd&, const Matrix4d&, const int&, const std::vector<std::pair<double, double> >&, int, double, double)[m[Kâ€™:
[01m[K/home/jj/dual_dummy/src/arm_control/src/motionlib.cpp:209:27:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare-Wsign-compare]8;;[m[K]
  209 |         for (int i = 0; [01;35m[Ki < num_joints[m[K; ++i) {
      |                         [01;35m[K~~^~~~~~~~~~~~[m[K
[01m[K/home/jj/dual_dummy/src/arm_control/src/motionlib.cpp:223:27:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare-Wsign-compare]8;;[m[K]
  223 |         for (int i = 0; [01;35m[Ki < num_joints[m[K; ++i) {
      |                         [01;35m[K~~^~~~~~~~~~~~[m[K
[01m[K/home/jj/dual_dummy/src/arm_control/src/motionlib.cpp:[m[K In function â€˜[01m[Kvoid saveCartesianTrajectoryToCSV(const std::vector<TrajectoryPoint>&, const string&)[m[Kâ€™:
[01m[K/home/jj/dual_dummy/src/arm_control/src/motionlib.cpp:425:9:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Knum_joints[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable-Wunused-variable]8;;[m[K]
  425 |     int [01;35m[Knum_joints[m[K = trajectory[0].positions.size();
      |         [01;35m[K^~~~~~~~~~[m[K
